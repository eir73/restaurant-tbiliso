{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["const headerToggler = document.getElementById('navbar__toggler')\r\nconst togglerIcon = headerToggler.querySelector('.material-icons')\r\nconst navbarMenu = document.getElementById('navbar__menu')\r\n\r\nconst scrollbarWidth = window.innerWidth - document.body.clientWidth;\r\n\r\nheaderToggler.addEventListener('click', () => {\r\n  navbarMenu.classList.toggle('open')\r\n  if (navbarMenu.classList.contains('open')) {\r\n    togglerIcon.innerHTML = 'close'\r\n    document.body.style.position = 'fixed'\r\n    document.body.style.paddingRight = scrollbarWidth + 'px'\r\n  } else {\r\n    togglerIcon.innerHTML = 'menu'\r\n    document.body.style.position = 'unset'\r\n    document.body.style.paddingRight = '0'\r\n  }\r\n})\r\n\r\nif (window.innerWidth <= 992) {\r\n  const swiper = new Swiper('.hall__items', {\r\n    slideClass: 'hall__item',\r\n    slidesPerView: 1,\r\n    pagination: {\r\n      el: '.swiper-pagination'\r\n    }\r\n  })\r\n\r\n  const swiperEvents = new Swiper('.event__items', {\r\n    slideClass: 'event__item',\r\n    slidesPerView: 1,\r\n    pagination: {\r\n      el: '.swiper-pagination'\r\n    }\r\n  })\r\n}\r\n\r\nconst bookForm = document.getElementById('book-form')\r\nconst deliveryForm = document.getElementById('delivery-form')\r\nconst bookLinks = [...document.querySelectorAll('a[href=\"./book.html\"]')]\r\nconst deliveryLinks = [...document.querySelectorAll('a[href=\"./delivery.html\"]')]\r\nconst bookBlock = document.querySelector('.book__form-wr')\r\nconst bookWrap = document.querySelector('.book')\r\nconst bookClose = document.getElementById('book-close')\r\nconst deliveryBlock = document.querySelector('.delivery__form-wr')\r\nconst deliveryWrap = document.querySelector('.delivery')\r\nconst deliveryClose = document.getElementById('delivery-close')\r\n\r\nbookWrap.addEventListener('click', (e) => {\r\n  if (!bookBlock.contains(e.target) || e.target === bookClose) {\r\n    bookWrap.classList.remove('open')\r\n    bookWrap.classList.remove('no-transition')\r\n  }\r\n})\r\n\r\nbookLinks.forEach(link => {\r\n  link.addEventListener('click', (e) => {\r\n    e.preventDefault()\r\n    bookWrap.classList.add('open')\r\n    setTimeout(() => {\r\n      bookWrap.classList.add('no-transition')\r\n    }, 1000)\r\n  })\r\n})\r\n\r\ndeliveryWrap.addEventListener('click', (e) => {\r\n  if (!deliveryBlock.contains(e.target) || e.target == deliveryClose) {\r\n    deliveryWrap.classList.remove('no-transition')\r\n    deliveryWrap.classList.remove('open')\r\n  }\r\n})\r\n\r\ndeliveryLinks.forEach(link => {\r\n  link.addEventListener('click', (e) => {\r\n    e.preventDefault()\r\n    deliveryWrap.classList.add('open')\r\n    setTimeout(() => {\r\n      deliveryWrap.classList.add('no-transition')\r\n    }, 1000)\r\n  })\r\n})\r\n\r\nbookForm.onsubmit = e => {\r\n  e.preventDefault()\r\n  const name = bookForm.querySelector('#name')\r\n  Bphone = bookForm.querySelector('#b-phone')\r\n  const date = bookForm.querySelector('#book-date')\r\n  const time = bookForm.querySelector('#time')\r\n\r\n  const data = {\r\n    name: name.value,\r\n    phone: Bphone.value,\r\n    date: date.value,\r\n    time: time.value,\r\n  }\r\n\r\n  time.value = ''\r\n  name.value = ''\r\n  Bphone.value = ''\r\n  date.value = ''\r\n  \r\n  fetch('https://tbiliso-bot.ey.r.appspot.com/api/reserve', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n  }).then(data => {\r\n    console.log(data)\r\n    return data.json()\r\n  }).then(data => console.log(data))\r\n\r\n  bookWrap.classList.remove('open')\r\n  bookWrap.classList.remove('no-transition')\r\n}\r\n\r\ndeliveryForm.onsubmit = e => {\r\n  e.preventDefault()\r\n  const name = deliveryForm.querySelector('#name')\r\n  Dphone = deliveryForm.querySelector('#d-phone')\r\n  const address = deliveryForm.querySelector('#address')\r\n  const time = deliveryForm.querySelector('#time')\r\n\r\n  const data = {\r\n    name: name.value,\r\n    phone: Dphone.value,\r\n    address: address.value,\r\n    time: time.value,\r\n  }\r\n\r\n  time.value = ''\r\n  name.value = ''\r\n  Dphone.value = ''\r\n  address.value = ''\r\n\r\n  fetch('https://tbiliso-bot.ey.r.appspot.com/api/delivery', {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n  }).then(data => {\r\n    console.log(data)\r\n    return data.json()\r\n  }).then(data => console.log(data))\r\n\r\n  console.log(data)\r\n  deliveryWrap.classList.remove('no-transition')\r\n  deliveryWrap.classList.remove('open')\r\n}\r\n\r\nfunction initMap() {\r\n  const tbilisoPosition = { lat: 48.74148810491459, lng: 37.58627156950326 };\r\n  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n    center: tbilisoPosition,\r\n    zoom: 16,\r\n    styles: [\r\n      { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#38414e\" }],\r\n      },\r\n    ]\r\n  })\r\n  const marker = new google.maps.Marker({\r\n    position: tbilisoPosition,\r\n    map: map,\r\n  });\r\n}"],"file":"main.js"}